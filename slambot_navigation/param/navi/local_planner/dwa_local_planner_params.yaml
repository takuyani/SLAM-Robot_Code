DWAPlannerROS:
  ## ----- Robot configuration parameters -----
  ## acc_lim_x (double, default: 2.5)
  ## The x acceleration limit of the robot in meters/sec^2
  acc_lim_x: 2.5

  ## acc_lim_y (double, default: 2.5)
  ## The y acceleration limit of the robot in meters/sec^2
  acc_lim_y: 0.0

  ## acc_lim_th (double, default: 3.2)
  ## The rotational acceleration limit of the robot in radians/sec^2
  acc_lim_th: 3.2

  ## max_trans_vel (double, default: 0.55)
  ## The absolute value of the maximum translational velocity for the robot in m/s
  max_trans_vel: 0.30

  ## min_trans_vel (double, default: 0.1)
  ## The absolute value of the minimum translational velocity for the robot in m/s
  min_trans_vel: 0.1

  ## max_vel_x (double, default: 0.55)
  ## The maximum x velocity for the robot in m/s.
  max_vel_x: 0.30

  ## min_vel_x (double, default: 0.0)
  ## The minimum x velocity for the robot in m/s, negative for backwards motion.
  min_vel_x: -0.30

  ## max_vel_y (double, default: 0.1)
  ## The maximum y velocity for the robot in m/s
  max_vel_y: 0.0

  ## min_vel_y (double, default: -0.1)
  ## The minimum y velocity for the robot in m/s
  min_vel_y: 0.0

  ## max_rot_vel (double, default: 1.0)
  ## The absolute value of the maximum rotational velocity for the robot in rad/s
  max_rot_vel: 3.2

  ## min_rot_vel (double, default: 0.4)
  ## The absolute value of the minimum rotational velocity for the robot in rad/s
  min_rot_vel: 0.4

  ## ----- Goal Tolerance Parameters -----
  ## yaw_goal_tolerance (double, default: 0.05)
  ## The tolerance in radians for the controller in yaw/rotation when achieving its goal
  yaw_goal_tolerance: 0.05

  ## xy_goal_tolerance (double, default: 0.10)
  ## The tolerance in meters for the controller in the x & y distance when achieving a goal
  xy_goal_tolerance: 0.10

  ## latch_xy_goal_tolerance (bool, default: false)
  ## If goal tolerance is latched, if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so.
  latch_xy_goal_tolerance: false

  ## ----- Forward Simulation Parameters -----
  ## sim_time (double, default: 1.7)
  ## The amount of time to forward-simulate trajectories in seconds
  sim_time: 1.7

  ## sim_granularity (double, default: 0.025)
  ## The step size, in meters, to take between points on a given trajectory
  sim_granularity: 0.025

  ## vx_samples (integer, default: 3)
  ## The number of samples to use when exploring the x velocity space
  vx_samples: 3

  ## vy_samples (integer, default: 10)
  ## The number of samples to use when exploring the y velocity space
  vy_samples: 10

  ## vth_samples (integer, default: 20)
  ## The number of samples to use when exploring the theta velocity space
  vth_samples: 20

  ## controller_frequency (double, default: 20.0)
  ## The frequency at which this controller will be called in Hz.
  ## Uses searchParam to read the parameter from parent namespaces if not set in the namespace of the controller.
  ## For use with move_base, this means that you only need to set its "controller_frequency" parameter and can safely leave this one unset.
  controller_frequency: 20.0

  ## ----- Trajectory Scoring Parameters -----
  ## path_distance_bias (double, default: 32.0)
  ## The weighting for how much the controller should stay close to the path it was given
  path_distance_bias: 32.0

  ## goal_distance_bias (double, default: 24.0)
  ## The weighting for how much the controller should attempt to reach its local goal, also controls speed
  goal_distance_bias: 24.0

  ## occdist_scale (double, default: 0.01)
  ## The weighting for how much the controller should attempt to avoid obstacles
  occdist_scale: 0.01

  ## forward_point_distance (double, default: 0.325)
  ## The distance from the center point of the robot to place an additional scoring point, in meters
  forward_point_distance: 0.325

  ## stop_time_buffer (double, default: 0.2)
  ## The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds
  stop_time_buffer: 0.2

  ## scaling_speed (double, default: 0.25)
  ## The absolute value of the velocity at which to start scaling the robot's footprint, in m/s
  scaling_speed: 0.25

  ## max_scaling_factor (double, default: 0.2)
  ## The maximum factor to scale the robot's footprint by
  max_scaling_factor: 0.2

  ## ----- Oscillation Prevention Parameters -----
  ## oscillation_reset_dist (double, default: 0.05)
  ## How far the robot must travel in meters before oscillation flags are reset
  oscillation_reset_dist: 0.05

  ## ----- Global Plan Parameters -----
  ## prune_plan (bool, default: true)
  ## Defines whether or not to eat up the plan as the robot moves along the path. If set to true, points will fall off the end of the plan once the robot moves 1 meter past them.
  prune_plan: true
