## controller_frequency [Hz]  (double, default: 20.0)
## ロボットベースに速度コマンドを与えるコントロール繰り返しの周期 (Hz単位)
controller_frequency: 5.0

## planner_patience [sec] (double, default: 5.0)
## 有効なパスが見つからなかった時にプランナーがどれだけ待機するか．待機の後にspace-clearing oparations（recovery behaviorsのこと？）が呼ばれる．待機時間内に前方の障害物が移動してパスが見つかった場合には復活するということ？
planner_patience: 5.0

## controller_patience [sec] (double, default: 15.0)
## space-clearing動作が実行される前に、コントローラが制御情報を受信待機する最大時間
controller_patience: 3.0

## conservative_reset_dist [m] (double, default: 3.0)
conservative_reset_dist: 3.0

## recovery_behavior_enabled (bool, default: true)
## Whether or not to enable the move_base recovery behaviors to attempt to clear out space.
## 有効なパスを見つけられなかった時に，recovery behaviorsを使用するかどうか．
recovery_behavior_enabled: true

## clearing_rotation_allowed (bool, default: true)
## Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space.
## Note: This parameter is only used when the default recovery behaviors are in use, meaning the user has not set the recovery_behaviors parameter to anything custom.
## 回転し、スペース見つけるための回転運動をするかどうか．
clearing_rotation_allowed: true

## shutdown_costmaps (bool, default false)
## 障害物をコストマップに残し続けておくか．
## これをfalseにしておくと人等の移動物体はその移動軌跡が障害物となってコストマップに現れる．
shutdown_costmaps: false

## oscillation_timeout [sec] (double, default: 0.0)
## 回復行動 (軌道計画に失敗した時の行動)を実行する前に、ロボットが行ったり来たりすることを可能にする時間
oscillation_timeout: 10.0

## oscillation_distance [m] (double, default: 0.5)
## この距離を移動した場合、oscillation_timeoutは初期化される。
oscillation_distance: 0.2

## planner_frequency  [Hz] (double, default 0.0)
## 全域計画の繰り返し周期 (Hz単位)
## global plannerがグローバルパスを計算する頻度．0.0に設定すると，最初にゴールが設定された時のみにグローバルパスが計算される．
planner_frequency: 1.0

## max_planning_retries (int32_t, default -1)
## 有効なパスが見つからなかった時に何度までパスの計算をリトライできるか？
## リトライの後にrecovery behaviorsに入る．
## -1に設定すると上限を設けない．
max_planning_retries: -1

