## obstacle_range [m] (double, default: 2.5)
## ロボットとの距離がobstacle_range以下のオブジェクトは障害物としてみなし，コストマップに反映する．
obstacle_range: 2.5

## raytrace_range [m] (double, default: 3.0)
## センサの値のうち、この距離値以上のデータは無視される。
raytrace_range: 3.5

## footprint
## ロボットの形状を多角形で指示することができる．footprintの形状に応じてコストマップのdefinitery in collisionとpossibly in collisionの径が決定される．
footprint: [[-0.205, -0.145], [-0.205, 0.145], [0.077, 0.145], [0.077, -0.145]]

## robot_radius [m] (double, default: 0.46)
## footpritによって多角形でロボットの形状を指定する代わりに，ロボットを円とみなしてその半径を指定することができる．
#robot_radius: 0.17

## inflation_radius [m] (double, default: 0.55)
## インフレーション領域 (ロボットの近傍領域)を表す円の半径で、障害物へ接近させないようにするパラメータ
inflation_radius: 0.50

## cost_scaling_factor (double, default: 10.0)
## A scaling factor to apply to cost values during inflation.
cost_scaling_factor: 0.5 

## 使用するcostmapをvoxel (voxel-grid)とcostmap (costmap_2d)の中から選択する。
#map_type: voxel
map_type: costmap

## map_type = voxel の場合のパラメータ
# origin_z [m] (double, default: 0.0)
# 初期高さの値
origin_z: 0.0

## z_resolution [m/cell] (double, default: 0.2)
## 各ボクセル (3次元空間を構成する小6面体)の高さ
z_resolution: 0.2

## z_voxels (int, default: 10)
## ボクセルの種類数を指定、以下のように2を設定すると、0と1が使える。ボクセル0はバンパーが使用され、ボクセル1はレーザースキャナが使用される。
z_voxels: 2

## unknown_threshold (int, default: ~<name>/z_voxels)
#unknown_threshold: 

## mark_threshold (int, default: 0)
mark_threshold: 0

## publish_voxel_map (bool, default: false)
## ボクセルマップを配信するかどうかを決定
publish_voxel_map: false

## footprint_clearing_enabled (bool, default: true)
footprint_clearing_enabled: true

## map_type = costmap の場合のパラメータ
## track_unknown_space (bool, default: false)
#track_unknown_space: false

## max_obstacle_height [m] (double, default: 2.0)
## 障害物の最大高さ (ロボットアームを装着した場合を考慮すること)
max_obstacle_height: 0.60

## 使用するセンサの指定（名前空間を指定する）．
observation_sources: laser_scan_sensor
laser_scan_sensor: {data_type: LaserScan, topic: /slambot_host/sensor_xtion_pro_live/scan, marking: true, clearing: true}

