<launch>
	<arg name="model" default="$(find slambot_description)/urdf/slambot.urdf.xacro"/>

	<arg name="camera" default="xtion_pro_live"/>
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
	    <arg name="world_name" value="$(find slambot_gazebo)/world/willow_garage.world"/> 
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>

	<!-- slambot model -->
	<group ns="slambot_host">
		<param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>

		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model slambot -param robot_description"/>

		<node name="mediation_cmdvel" pkg="slambot_gazebo" type="mediation_cmdvel_node" respawn="true" output="screen" >
			<remap from="src/cmd_vel" to="cmd_vel"/>
			<remap from="dst/cmd_vel" to="diff_drive_controller/cmd_vel"/>
		</node>

	</group>

	<include file="$(find slambot_navigation)/launch/control.launch"/>

	<group ns="slambot_host">
		<node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
		<node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
			args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager"
			respawn="true">
			<param name="scan_height" value="10"/>
			<param name="output_frame_id" value="sensor_xtion_pro_live_ir_frame"/>
			<param name="range_min" value="0.45"/>

			<remap from="image" to="sensor_xtion_pro_live/depth_registered/image_raw"/>
			<remap from="camera_info" to="sensor_xtion_pro_live/depth_registered/camera_info"/>
			<remap from="scan" to="sensor_xtion_pro_live/scan"/>
		</node>	
	</group>

	<!-- cartographer -->
	<node name="cartographer" pkg="cartographer_ros" type="cartographer_node"
		args="
		-configuration_directory $(find slambot_navigation)/config/lua
		-configuration_basename slambot_2d.lua"
		output="screen">
			<remap from="scan" to="/slambot_host/sensor_xtion_pro_live/scan" />
			<remap from="odom" to="/slambot_host/diff_drive_controller/odom" />
	</node>

	<node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
		type="cartographer_occupancy_grid_node" args="-resolution 0.05" />

	<!-- move_base -->
	<arg name="cmd_vel_topic" default="/slambot_host/cmd_vel" />
	<arg name="odom_topic" default="/slambot_host/diff_drive_controller/odom" />
	<arg name="global_costmap" default="global_costmap" />
	<arg name="local_costmap" default="local_costmap" />
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
		<rosparam file="$(find slambot_navigation)/param/navi/costmap_common_params.yaml" command="load" ns="$(arg local_costmap)" />
		<rosparam file="$(find slambot_navigation)/param/navi/costmap_common_params.yaml" command="load" ns="$(arg global_costmap)" />
		<rosparam file="$(find slambot_navigation)/param/navi/local_costmap_params.yaml" command="load" ns="$(arg local_costmap)" />
		<rosparam file="$(find slambot_navigation)/param/navi/global_costmap_params.yaml" command="load" ns="$(arg global_costmap)" />
		<rosparam file="$(find slambot_navigation)/param/navi/dwa_local_planner_params.yaml" command="load" />
		<rosparam file="$(find slambot_navigation)/param/navi/move_base_params.yaml" command="load" />
		<remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
		<remap from="odom" to="$(arg odom_topic)"/>
	</node>

</launch>

