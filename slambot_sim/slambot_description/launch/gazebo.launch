<launch>
	<arg name="model" default="$(find slambot_description)/urdf/slambot.urdf.xacro"/>

	<arg name="camera" default="xtion_pro_live"/>
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

<!--
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>
-->

	<include file="$(find slambot_description)/launch/willow.launch">
	</include>

	<group ns="slambot_host">
		<param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>

		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model slambot -param robot_description"/>
	</group>

	<include file="$(find slambot_description)/launch/control.launch"/>

	<group ns="slambot_host">
		<node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
		<node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
			args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager"
			respawn="true">
			<param name="scan_height" value="10"/>
			<param name="output_frame_id" value="sensor_xtion_pro_live_ir_frame"/>
			<param name="range_min" value="0.45"/>

			<remap from="image" to="sensor_xtion_pro_live/depth_registered/image_raw"/>
			<remap from="camera_info" to="sensor_xtion_pro_live/depth_registered/camera_info"/>
			<remap from="scan" to="sensor_xtion_pro_live/scan"/>
		</node>

		<node name="cartographer" pkg="cartographer_ros" type="cartographer_node"
			args="
			-configuration_directory $(find slambot_description)/config/lua
			-configuration_basename toyota_hsr_2d.lua"
			output="screen">
				<remap from="scan" to="/slambot_host/sensor_xtion_pro_live/scan" />
				<remap from="odom" to="/slambot_host/vehicle_controller/odom" />
		</node>

		<node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
			type="cartographer_occupancy_grid_node" args="-resolution 0.05" />

	</group>

</launch>

